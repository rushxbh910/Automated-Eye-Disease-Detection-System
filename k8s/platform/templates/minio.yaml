apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: eye-platform
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
      - name: minio
        image: quay.io/minio/minio
        args: ["server", "/data", "--console-address", ":9001"]
        ports:
        - containerPort: 9000
        - containerPort: 9001
        env:
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef:
              name: minio-credentials
              key: accesskey
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: minio-credentials
              key: secretkey
        volumeMounts:
        - name: data
          mountPath: /data
      volumes:
      - name: data
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: eye-platform
spec:
  selector:
    app: minio
  type: ClusterIP
  ports:
  - port: 9000
    targetPort: 9000
  - port: 9001
    targetPort: 9001
  externalIPs:
    - {{ .Values.minio.externalIP }}

---
apiVersion: batch/v1
kind: Job
metadata:
  name: create-minio-bucket
  namespace: eye-platform
  annotations:
    "argocd.argoproj.io/hook": PostSync
spec:
  template:
    spec:
      restartPolicy: Never
      containers:
      - name: mc
        image: minio/mc
        command: ["/bin/sh", "-c"]
        args:
          - |
            mc alias set local http://minio.eye-platform.svc.cluster.local:9000 "$MINIO_ROOT_USER" "$MINIO_ROOT_PASSWORD"
            mc mb local/eyemodels || true
        envFrom:
        - secretRef:
            name: minio-credentials
